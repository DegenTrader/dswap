/// <reference types="ws" />
import { AxiosInstance } from 'axios';
import IsoWebSocket from 'isomorphic-ws';
import { ViaConfig, IGetRoutesRequestParams, IGetAllowanceStatus, IBuildApprovalTx, IBuildTx, IAllowance, IApprovalTx, IBuildTxResponse, IGetRoutesResponse, ICheckTxStatusRequest, ITxStatusResponse, IStartRoute, IStartRouteResponse, IStartAction } from './types';
declare class Via {
    httpCli: AxiosInstance;
    apiKey: string;
    baseURL: string;
    constructor(config: ViaConfig);
    getRoutesViaWs(params: IGetRoutesRequestParams): IsoWebSocket;
    getRoutes(params: IGetRoutesRequestParams): Promise<IGetRoutesResponse>;
    getAllowanceStatus(params: IGetAllowanceStatus): Promise<IAllowance>;
    buildApprovalTx(params: IBuildApprovalTx): Promise<IApprovalTx>;
    buildTx(params: IBuildTx): Promise<IBuildTxResponse>;
    startRoute(params: IStartRoute): Promise<IStartRouteResponse>;
    startAction(params: IStartAction): Promise<void>;
    routesPages(): Promise<number>;
    checkTx(params: ICheckTxStatusRequest): Promise<ITxStatusResponse>;
}
export default Via;

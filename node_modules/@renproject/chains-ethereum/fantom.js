"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fantom = void 0;
const utils_1 = require("@renproject/utils");
const base_1 = require("./base");
const generic_1 = require("./utils/generic");
const configMap = {
    [utils_1.RenNetwork.Mainnet]: {
        selector: "Fantom",
        nativeAsset: { name: "Fantom", symbol: "FTM", decimals: 18 },
        averageConfirmationTime: 1,
        config: {
            chainId: "0xfa",
            chainName: "Fantom Opera",
            nativeCurrency: { name: "Fantom", symbol: "FTM", decimals: 18 },
            rpcUrls: [
                "https://rpc.ftm.tools",
                "https://fantom-mainnet.gateway.pokt.network/v1/lb/62759259ea1b320039c9e7ac",
                "https://rpc.ankr.com/fantom",
                "https://rpc.fantom.network",
                "https://rpc2.fantom.network",
                "https://rpc3.fantom.network",
                "https://rpcapi.fantom.network",
                "https://fantom-mainnet.public.blastapi.io",
            ],
            blockExplorerUrls: ["https://ftmscan.com"],
        },
        addresses: {
            GatewayRegistry: "0xf36666C230Fa12333579b9Bd6196CB634D6BC506",
            BasicBridge: "0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5",
        },
    },
    [utils_1.RenNetwork.Testnet]: {
        selector: "Fantom",
        nativeAsset: { name: "Testnet Fantom", symbol: "FTM", decimals: 18 },
        averageConfirmationTime: 1,
        config: {
            chainId: "0xfa2",
            chainName: "Fantom Testnet",
            nativeCurrency: { name: "Fantom", symbol: "FTM", decimals: 18 },
            rpcUrls: ["https://rpc.testnet.fantom.network"],
            blockExplorerUrls: ["https://testnet.ftmscan.com"],
        },
        addresses: {
            GatewayRegistry: "0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701",
            BasicBridge: "0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518",
        },
    },
};
class Fantom extends base_1.EthereumBaseChain {
    constructor(_a) {
        var { network } = _a, params = __rest(_a, ["network"]);
        super(Object.assign(Object.assign({}, params), { network: (0, generic_1.resolveEVMNetworkConfig)(configMap, network) }));
        this.configMap = Fantom.configMap;
        this.assets = Fantom.assets;
    }
}
exports.Fantom = Fantom;
// Static members.
Fantom.chain = "Fantom";
Fantom.configMap = configMap;
Fantom.assets = {
    FTM: "FTM",
};
//# sourceMappingURL=fantom.js.map
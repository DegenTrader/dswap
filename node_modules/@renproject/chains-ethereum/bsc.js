"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BinanceSmartChain = void 0;
const utils_1 = require("@renproject/utils");
const base_1 = require("./base");
const generic_1 = require("./utils/generic");
const configMap = {
    [utils_1.RenNetwork.Mainnet]: {
        selector: "BinanceSmartChain",
        nativeAsset: {
            name: "Binance Coin",
            symbol: "BNB",
            decimals: 18,
        },
        averageConfirmationTime: 3,
        config: {
            chainId: "0x38",
            chainName: "Binance Smart Chain Mainnet",
            nativeCurrency: {
                name: "Binance Chain Native Token",
                symbol: "BNB",
                decimals: 18,
            },
            rpcUrls: [
                "https://bsc-dataseed1.binance.org",
                "https://bsc-dataseed2.binance.org",
                "https://bsc-dataseed3.binance.org",
                "https://bsc-dataseed4.binance.org",
                "https://bsc-dataseed1.defibit.io",
                "https://bsc-dataseed2.defibit.io",
                "https://bsc-dataseed3.defibit.io",
                "https://bsc-dataseed4.defibit.io",
                "https://bsc-dataseed1.ninicoin.io",
                "https://bsc-dataseed2.ninicoin.io",
                "https://bsc-dataseed3.ninicoin.io",
                "https://bsc-dataseed4.ninicoin.io",
                "wss://bsc-ws-node.nariox.org",
                "https://bsc-dataseed.binance.org",
                "https://rpc.ankr.com/bsc",
                "https://bscrpc.com",
                "https://bsc.mytokenpocket.vip",
                "https://binance.nodereal.io",
                "https://rpc-bsc.bnb48.club",
            ],
            blockExplorerUrls: ["https://bscscan.com"],
        },
        logRequestLimit: 5000,
        addresses: {
            GatewayRegistry: "0xf36666C230Fa12333579b9Bd6196CB634D6BC506",
            BasicBridge: "0x82DF02A52E2e76C0c233367f2fE6c9cfe51578c5",
        },
    },
    [utils_1.RenNetwork.Testnet]: {
        selector: "BinanceSmartChain",
        isTestnet: true,
        nativeAsset: {
            name: "Testnet Binance Coin",
            symbol: "BNB",
            decimals: 18,
        },
        averageConfirmationTime: 3,
        config: {
            chainId: "0x61",
            chainName: "Binance Smart Chain Testnet",
            nativeCurrency: {
                name: "Binance Chain Native Token",
                symbol: "tBNB",
                decimals: 18,
            },
            rpcUrls: [
                "https://data-seed-prebsc-1-s1.binance.org:8545",
                "https://data-seed-prebsc-2-s1.binance.org:8545",
                "https://data-seed-prebsc-1-s2.binance.org:8545",
                "https://data-seed-prebsc-2-s2.binance.org:8545",
                "https://data-seed-prebsc-1-s3.binance.org:8545",
                "https://data-seed-prebsc-2-s3.binance.org:8545",
            ],
            blockExplorerUrls: ["https://testnet.bscscan.com"],
        },
        logRequestLimit: 5000,
        addresses: {
            GatewayRegistry: "0x5076a1F237531fa4dC8ad99bb68024aB6e1Ff701",
            BasicBridge: "0xcb6bD6B6c7D7415C0157e393Bb2B6Def7555d518",
        },
    },
};
class BinanceSmartChain extends base_1.EthereumBaseChain {
    constructor(_a) {
        var { network } = _a, params = __rest(_a, ["network"]);
        super(Object.assign(Object.assign({}, params), { network: (0, generic_1.resolveEVMNetworkConfig)(configMap, network) }));
        this.assets = BinanceSmartChain.assets;
        this.configMap = configMap;
    }
}
exports.BinanceSmartChain = BinanceSmartChain;
// Static members.
BinanceSmartChain.chain = "BinanceSmartChain";
BinanceSmartChain.configMap = configMap;
BinanceSmartChain.assets = {
    BNB: "BNB",
};
//# sourceMappingURL=bsc.js.map
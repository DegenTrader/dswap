import { EthereumBaseChain } from "./base";
/**
 * The Ethereum RenJS implementation.
 */
export declare class Ethereum extends EthereumBaseChain {
    static chain: "Ethereum";
    static configMap: {
        mainnet?: import(".").EVMNetworkConfig | undefined;
        testnet?: import(".").EVMNetworkConfig | undefined;
        devnet?: import(".").EVMNetworkConfig | undefined;
    };
    static assets: {
        ETH: "ETH";
        DAI: "DAI";
        REN: "REN";
        USDC: "USDC";
        USDT: "USDT";
        EURT: "EURT";
        BUSD: "BUSD";
        MIM: "MIM";
        CRV: "CRV";
        LINK: "LINK";
        UNI: "UNI";
        SUSHI: "SUSHI";
        FTT: "FTT";
        ROOK: "ROOK";
        BADGER: "BADGER";
        KNC: "KNC";
    };
    configMap: {
        mainnet?: import(".").EVMNetworkConfig | undefined;
        testnet?: import(".").EVMNetworkConfig | undefined;
        devnet?: import(".").EVMNetworkConfig | undefined;
    };
    assets: {
        ETH: "ETH";
        DAI: "DAI";
        REN: "REN";
        USDC: "USDC";
        USDT: "USDT";
        EURT: "EURT";
        BUSD: "BUSD";
        MIM: "MIM";
        CRV: "CRV";
        LINK: "LINK";
        UNI: "UNI";
        SUSHI: "SUSHI";
        FTT: "FTT";
        ROOK: "ROOK";
        BADGER: "BADGER";
        KNC: "KNC";
    };
    /**
     * Create a new Ethereum instance.
     *
     * @param params Ethereum constructor parameters
     * @param params.network A RenVM network string or an EVM config object.
     * @param params.provider A Web3 or Ethers.js provider.
     * @param params.signer A Web3 or Ethers.js signer.
     * @param params.config Pass optional configurations, e.g. a logger
     */
    constructor({ network, ...params }: ConstructorParameters<typeof EthereumBaseChain>[0]);
}
//# sourceMappingURL=ethereum.d.ts.map
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import Axios from "axios";
import { extractError } from "./extractError";
import { sleep } from "./sleep";
// Default timeout for network requests.
export const DEFAULT_TIMEOUT = 30 * sleep.SECONDS;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const GET = (url, config) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const response = yield Axios.get(url, Object.assign({ timeout: DEFAULT_TIMEOUT }, config));
        return response.data;
    }
    catch (error) {
        throw new Error(extractError(error));
    }
});
// eslint-disable-next-line @typescript-eslint/no-explicit-any
export const POST = (url, data, config) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const response = yield Axios.post(url, data, Object.assign({ timeout: DEFAULT_TIMEOUT }, config));
        return response.data;
    }
    catch (error) {
        throw new Error(extractError(error));
    }
});
//# sourceMappingURL=network.js.map
import { Marshalled, PackPrimitive, PackTypeDefinition, TypedPackValue } from "@renproject/utils";
export interface SubmitGatewayInput {
    version: string;
    selector: string;
    in: SubmitGateway;
}
export declare const submitGatewayType: PackTypeDefinition;
export declare type SubmitGateway = TypedPackValue<typeof submitGatewayType, {
    amount: Marshalled<PackPrimitive.U256>;
    ghash: Marshalled<PackPrimitive.Bytes32>;
    gpubkey: Marshalled<PackPrimitive.Bytes>;
    nhash: Marshalled<PackPrimitive.Bytes32>;
    nonce: Marshalled<PackPrimitive.Bytes32>;
    payload: Marshalled<PackPrimitive.Bytes>;
    phash: Marshalled<PackPrimitive.Bytes32>;
    to: Marshalled<PackPrimitive.Str>;
    txid: Marshalled<PackPrimitive.Bytes>;
    txindex: Marshalled<PackPrimitive.U32>;
}>;
export declare type ParamsSubmitGateway = {
    gateway: string;
    tx: SubmitGatewayInput;
};
//# sourceMappingURL=ren_submitGateway.d.ts.map
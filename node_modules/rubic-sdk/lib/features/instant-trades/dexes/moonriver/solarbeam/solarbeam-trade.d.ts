import { BlockchainName } from "../../../../../core/blockchain/models/blockchain-name";
import { ContractMulticallResponse } from "../../../../../core/blockchain/web3-public/models/contract-multicall-response";
import { UniswapV2AbstractTrade, UniswapV2TradeStruct } from "../../common/uniswap-v2-abstract/uniswap-v2-abstract-trade";
import { TradeType } from "../../../..";
import { Exact } from "../../../models/exact";
export declare class SolarbeamTrade extends UniswapV2AbstractTrade {
    static readonly contractAbi: import("web3-utils").AbiItem[];
    static get type(): TradeType;
    static callForRoutes(blockchain: BlockchainName, exact: Exact, routesMethodArguments: [string, string[]][]): Promise<ContractMulticallResponse<{
        amounts: string[];
    }>[]>;
    private static readonly feeParameter;
    protected readonly contractAddress = "0xAA30eF758139ae4a7f798112902Bf6d65612045f";
    constructor(tradeStruct: UniswapV2TradeStruct);
}

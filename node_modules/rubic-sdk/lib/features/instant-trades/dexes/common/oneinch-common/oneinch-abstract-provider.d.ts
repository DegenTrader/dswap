import { PriceTokenAmount } from "../../../../../core/blockchain/tokens/price-token-amount";
import BigNumber from 'bignumber.js';
import { PriceToken } from "../../../../../core/blockchain/tokens/price-token";
import { OneinchTrade } from "./oneinch-trade";
import { InstantTradeProvider } from "../../../instant-trade-provider";
import { SwapCalculationOptions } from "../../../models/swap-calculation-options";
import { TradeType } from "../../../..";
declare type OneinchSwapCalculationOptions = Omit<SwapCalculationOptions, 'deadlineMinutes'>;
export declare abstract class OneinchAbstractProvider extends InstantTradeProvider {
    private readonly httpClient;
    private readonly defaultOptions;
    protected readonly gasMargin = 1;
    get type(): TradeType;
    private get walletAddress();
    private get apiBaseUrl();
    private loadContractAddress;
    /**
     * Calculates input amount, based on amount, user wants to get.
     * @param from Token to sell.
     * @param to Token to get with output amount.
     * @param options Additional options.
     */
    calculateExactOutputAmount(from: PriceToken, to: PriceTokenAmount, options?: OneinchSwapCalculationOptions): Promise<BigNumber>;
    calculate(from: PriceTokenAmount, toToken: PriceToken, options?: OneinchSwapCalculationOptions): Promise<OneinchTrade>;
    private getTradeInfo;
    /**
     * Extracts tokens path from oneInch api response.
     * @returns Promise<Token[]> Tokens array, used in the route.
     */
    private extractPath;
}
export {};

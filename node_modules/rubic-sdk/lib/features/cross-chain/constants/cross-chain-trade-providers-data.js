"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.crossChainTradeProvidersData = void 0;
var uni_swap_v2_ethereum_provider_1 = require("../../instant-trades/dexes/ethereum/uni-swap-v2-ethereum/uni-swap-v2-ethereum-provider");
var sushi_swap_ethereum_provider_1 = require("../../instant-trades/dexes/ethereum/sushi-swap-ethereum/sushi-swap-ethereum-provider");
var uni_swap_v3_ethereum_provider_1 = require("../../instant-trades/dexes/ethereum/uni-swap-v3-ethereum/uni-swap-v3-ethereum-provider");
var oneinch_ethereum_provider_1 = require("../../instant-trades/dexes/ethereum/oneinch-ethereum/oneinch-ethereum-provider");
var pancake_swap_provider_1 = require("../../instant-trades/dexes/bsc/pancake-swap/pancake-swap-provider");
var quick_swap_provider_1 = require("../../instant-trades/dexes/polygon/quick-swap/quick-swap-provider");
var pangolin_provider_1 = require("../../instant-trades/dexes/avalanche/pangolin/pangolin-provider");
var joe_provider_1 = require("../../instant-trades/dexes/avalanche/joe/joe-provider");
var sushi_swap_avalanche_provider_1 = require("../../instant-trades/dexes/avalanche/sushi-swap-avalanche/sushi-swap-avalanche-provider");
var solarbeam_provider_1 = require("../../instant-trades/dexes/moonriver/solarbeam/solarbeam-provider");
var sushi_swap_moonriver_provider_1 = require("../../instant-trades/dexes/moonriver/sushi-swap-moonriver/sushi-swap-moonriver-provider");
var spooky_swap_provider_1 = require("../../instant-trades/dexes/fantom/spooky-swap/spooky-swap-provider");
var spirit_swap_provider_1 = require("../../instant-trades/dexes/fantom/spirit-swap/spirit-swap-provider");
var sushi_swap_fantom_provider_1 = require("../../instant-trades/dexes/fantom/sushi-swap-fantom/sushi-swap-fantom-provider");
var sushi_swap_harmony_provider_1 = require("../../instant-trades/dexes/harmony/sushi-swap-harmony/sushi-swap-harmony-provider");
var viper_swap_harmony_provider_1 = require("../../instant-trades/dexes/harmony/viper-swap-harmony/viper-swap-harmony-provider");
var sushi_swap_arbitrum_provider_1 = require("../../instant-trades/dexes/arbitrum/sushi-swap-arbitrum/sushi-swap-arbitrum-provider");
var uni_swap_v3_arbitrum_provider_1 = require("../../instant-trades/dexes/arbitrum/uni-swap-v3-arbitrum/uni-swap-v3-arbitrum-provider");
var oneinch_arbitrum_provider_1 = require("../../instant-trades/dexes/arbitrum/oneinch-arbitrum/oneinch-arbitrum-provider");
var trisolaris_aurora_provider_1 = require("../../instant-trades/dexes/aurora/trisolaris-aurora/trisolaris-aurora-provider");
var wanna_swap_aurora_provider_1 = require("../../instant-trades/dexes/aurora/wanna-swap-aurora/wanna-swap-aurora-provider");
var blockchain_name_1 = require("../../../core/blockchain/models/blockchain-name");
var sushi_swap_telos_provider_1 = require("../../instant-trades/dexes/telos/sushi-swap-telos/sushi-swap-telos-provider");
var trisolaris_aurora_provider_2 = require("../../instant-trades/dexes/telos/zappy/trisolaris-aurora-provider");
var oneinch_fantom_provider_1 = require("../../instant-trades/dexes/fantom/oneinch-fantom/oneinch-fantom-provider");
var oneinch_avalanche_provider_1 = require("../../instant-trades/dexes/avalanche/oneinch-avalanche/oneinch-avalanche-provider");
var uni_swap_v3_polygon_provider_1 = require("../../instant-trades/dexes/polygon/uni-swap-v3-polygon/uni-swap-v3-polygon-provider");
var sushi_swap_bsc_provider_1 = require("../../instant-trades/dexes/bsc/sushi-swap-bsc/sushi-swap-bsc-provider");
var oneinch_bsc_provider_1 = require("../../instant-trades/dexes/bsc/oneinch-bsc/oneinch-bsc-provider");
var algebra_provider_1 = require("../../instant-trades/dexes/polygon/algebra/algebra-provider");
var oneinch_polygon_provider_1 = require("../../instant-trades/dexes/polygon/oneinch-polygon/oneinch-polygon-provider");
var sushi_swap_polygon_provider_1 = require("../../instant-trades/dexes/polygon/sushi-swap-polygon/sushi-swap-polygon-provider");
/**
 * Stores contracts info.
 * Every contract may have several instant-trade providers.
 * Because of that every provider has `method suffix` - suffix
 * to add to default swap-method name to call that provider's method.
 */
exports.crossChainTradeProvidersData = (_a = {},
    _a[blockchain_name_1.BLOCKCHAIN_NAME.ETHEREUM] = [
        {
            ProviderClass: uni_swap_v2_ethereum_provider_1.UniSwapV2EthereumProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: sushi_swap_ethereum_provider_1.SushiSwapEthereumProvider,
            methodSuffix: '1'
        },
        {
            ProviderClass: uni_swap_v3_ethereum_provider_1.UniSwapV3EthereumProvider,
            methodSuffix: 'V3'
        },
        {
            ProviderClass: oneinch_ethereum_provider_1.OneinchEthereumProvider,
            methodSuffix: 'Inch'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.BINANCE_SMART_CHAIN] = [
        {
            ProviderClass: pancake_swap_provider_1.PancakeSwapProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: sushi_swap_bsc_provider_1.SushiSwapBscProvider,
            methodSuffix: '1'
        },
        {
            ProviderClass: oneinch_bsc_provider_1.OneinchBscProvider,
            methodSuffix: 'Inch'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.POLYGON] = [
        {
            ProviderClass: quick_swap_provider_1.QuickSwapProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: sushi_swap_polygon_provider_1.SushiSwapPolygonProvider,
            methodSuffix: '1'
        },
        {
            ProviderClass: uni_swap_v3_polygon_provider_1.UniSwapV3PolygonProvider,
            methodSuffix: 'V3'
        },
        {
            ProviderClass: algebra_provider_1.AlgebraProvider,
            methodSuffix: 'ALGB'
        },
        {
            ProviderClass: oneinch_polygon_provider_1.OneinchPolygonProvider,
            methodSuffix: 'Inch'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.AVALANCHE] = [
        {
            ProviderClass: pangolin_provider_1.PangolinProvider,
            methodSuffix: 'AVAX'
        },
        {
            ProviderClass: joe_provider_1.JoeProvider,
            methodSuffix: 'AVAX1'
        },
        {
            ProviderClass: sushi_swap_avalanche_provider_1.SushiSwapAvalancheProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: oneinch_avalanche_provider_1.OneinchAvalancheProvider,
            methodSuffix: 'Inch'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.MOONRIVER] = [
        {
            ProviderClass: solarbeam_provider_1.SolarbeamProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: sushi_swap_moonriver_provider_1.SushiSwapMoonriverProvider,
            methodSuffix: '1'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.FANTOM] = [
        {
            ProviderClass: spooky_swap_provider_1.SpookySwapProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: spirit_swap_provider_1.SpiritSwapProvider,
            methodSuffix: '1'
        },
        {
            ProviderClass: sushi_swap_fantom_provider_1.SushiSwapFantomProvider,
            methodSuffix: '2'
        },
        {
            ProviderClass: oneinch_fantom_provider_1.OneinchFantomProvider,
            methodSuffix: 'Inch'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.HARMONY] = [
        {
            ProviderClass: sushi_swap_harmony_provider_1.SushiSwapHarmonyProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: viper_swap_harmony_provider_1.ViperSwapHarmonyProvider,
            methodSuffix: '1'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.ARBITRUM] = [
        {
            ProviderClass: sushi_swap_arbitrum_provider_1.SushiSwapArbitrumProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: uni_swap_v3_arbitrum_provider_1.UniSwapV3ArbitrumProvider,
            methodSuffix: 'V3'
        },
        {
            ProviderClass: oneinch_arbitrum_provider_1.OneinchArbitrumProvider,
            methodSuffix: 'Inch'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.AURORA] = [
        {
            ProviderClass: trisolaris_aurora_provider_1.TrisolarisAuroraProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: wanna_swap_aurora_provider_1.WannaSwapAuroraProvider,
            methodSuffix: '1'
        }
    ],
    _a[blockchain_name_1.BLOCKCHAIN_NAME.TELOS] = [
        {
            ProviderClass: sushi_swap_telos_provider_1.SushiSwapTelosProvider,
            methodSuffix: ''
        },
        {
            ProviderClass: trisolaris_aurora_provider_2.ZappyProvider,
            methodSuffix: '1'
        }
    ],
    _a);
//# sourceMappingURL=cross-chain-trade-providers-data.js.map
import { PendingRequest } from 'symbiosis-js-sdk';
import { SwapTransactionOptions } from "..";
import { BlockchainName, Token } from "../../core";
import { Log as EthersLog } from '@ethersproject/providers';
import { TransactionReceipt } from 'web3-eth';
export declare class CrossChainSymbiosisManager {
    private readonly symbiosis;
    private get walletAddress();
    getUserTrades(fromAddress?: string): Promise<PendingRequest[]>;
    /**
     * Waiting for symbiosis trade to complete.
     * @param fromBlockchain Trade from blockchain.
     * @param toBlockchain Trade to blockchain.
     * @param toToken Trade to toke.
     * @param receipt Transaction receipt.
     * @returns Promise<EthersLog>
     */
    waitForComplete(fromBlockchain: BlockchainName, toBlockchain: BlockchainName, toToken: Token, receipt: TransactionReceipt): Promise<EthersLog>;
    revertTrade(revertTransactionHash: string, options?: SwapTransactionOptions): Promise<TransactionReceipt>;
    private getDirection;
}

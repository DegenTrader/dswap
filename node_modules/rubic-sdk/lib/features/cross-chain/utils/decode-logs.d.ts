import { TransactionReceipt } from 'web3-eth';
import { AbiItem } from 'web3-utils';
interface DecodedLogData {
    name: string;
    type: string;
    value?: string;
}
interface DecodedLog {
    name: string;
    address: string;
    params: DecodedLogData[];
}
export declare class LogsDecoder {
    /**
     * Converts abi type to string.
     * @param input Abi input.
     */
    private static typeToString;
    /**
     * Constructs methods ids from contract events items.
     * @param abiItems Abi items.
     */
    private static constructMethodIds;
    /**
     * Constructs date types from method abi.
     * @param method Method abi item.
     */
    private static constructDataTypes;
    /**
     * Decodes log params.
     * @param method Method abi tem.
     * @param logItem Log item.
     * @param decodedData Decoded data.
     */
    private static decodeParams;
    private static decodeMethod;
    /**
     * private static for decoding transaction logs
     * @param abi Contract ABI
     * @param receipt Transaction receipt
     * @returns Array of decoded logs
     */
    static decodeLogs(abi: AbiItem[], receipt: TransactionReceipt): Array<DecodedLog | null>;
}
export {};

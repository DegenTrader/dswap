import { BlockchainName } from "../../../../../../core/blockchain/models/blockchain-name";
import { Token } from "../../../../../../core/blockchain/tokens/token";
import { PriceTokenAmount } from "../../../../../../core/blockchain/tokens/price-token-amount";
import BigNumber from 'bignumber.js';
import { ProviderData } from "../../../../models/provider-data";
import { CrossChainContractData } from "../../../common/celer-rubic/cross-chain-contract-data";
/**
 * Class to work with readable methods of cross-chain contract.
 */
export declare class RubicCrossChainContractData extends CrossChainContractData {
    readonly blockchain: BlockchainName;
    readonly address: string;
    readonly providersData: ProviderData[];
    constructor(blockchain: BlockchainName, address: string, providersData: ProviderData[]);
    getNumOfBlockchain(): Promise<number>;
    getTransitToken(): Promise<Token>;
    getFeeInPercents(fromContract: CrossChainContractData): Promise<number>;
    getCryptoFeeToken(toContract: RubicCrossChainContractData): Promise<PriceTokenAmount>;
    getMinMaxTransitTokenAmounts(): Promise<[string, string]>;
    isPaused(): Promise<boolean>;
    getMaxGasPrice(): Promise<BigNumber>;
}

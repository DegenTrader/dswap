import { Percent, Token, TokenAmount } from '../entities';
import { OneInchOracle } from './contracts';
import { ChainId } from '../constants';
import { DataProvider } from './dataProvider';
declare type Protocol = {
    id: string;
    title: string;
    img: string;
    img_color: string;
};
export declare class OneInchTrade {
    tokenAmountIn: TokenAmount;
    route: Token[];
    amountOut: TokenAmount;
    callData: string;
    priceImpact: Percent;
    routerAddress: string;
    oracle: OneInchOracle;
    callDataOffset?: number;
    private readonly tokenOut;
    private readonly from;
    private readonly to;
    private readonly slippage;
    private readonly dataProvider;
    constructor(tokenAmountIn: TokenAmount, tokenOut: Token, from: string, to: string, slippage: number, oracle: OneInchOracle, dataProvider: DataProvider);
    init(): Promise<this>;
    static getProtocols(chainId: ChainId): Promise<Protocol[]>;
    private getOffset;
    static getRateToEth(tokens: Token[], oracle: OneInchOracle): Promise<import("./contracts/Multicall").Multicall2.ResultStructOutput[]>;
    private calculatePriceImpact;
}
export {};

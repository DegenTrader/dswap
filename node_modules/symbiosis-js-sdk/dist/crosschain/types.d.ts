import { ChainId, TokenConstructor } from '../constants';
export declare enum Field {
    INPUT = "INPUT",
    OUTPUT = "OUTPUT"
}
export declare enum PairState {
    LOADING = 0,
    NOT_EXISTS = 1,
    EXISTS = 2,
    INVALID = 3
}
export declare type BridgeDirection = 'burn' | 'mint';
export declare type NerveConfig = {
    address: string;
    tokens: string[];
    decimals: number[];
};
export declare type ChainConfig = {
    id: ChainId;
    rpc: string;
    dexFee: number;
    filterBlockOffset: number;
    stables: TokenConstructor[];
    nerves: NerveConfig[];
    metaRouter: string;
    metaRouterGateway: string;
    multicallRouter: string;
    aavePool: string;
    creamComptroller: string;
    renGatewayRegistry: string;
    router: string;
    bridge: string;
    synthesis: string;
    portal: string;
    fabric: string;
    waitForBlocksCount: number;
};
export declare type AdvisorConfig = {
    url: string;
};
export declare type Config = {
    advisor: AdvisorConfig;
    chains: ChainConfig[];
    minSwapAmountInUsd: number;
    maxSwapAmountInUsd: number;
};

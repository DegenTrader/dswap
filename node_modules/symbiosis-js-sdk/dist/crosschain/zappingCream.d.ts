import { SwapExactIn, BaseSwapping } from './baseSwapping';
import { Token, TokenAmount } from '../entities';
import { MulticallRouter } from './contracts';
import { ChainId } from '../constants';
declare type Market = {
    market: string;
    underlying: string;
    paused: boolean;
};
export declare class ZappingCream extends BaseSwapping {
    protected multicallRouter: MulticallRouter;
    protected userAddress: string;
    private creamPoolAddress;
    getAllMarkets(chainId: ChainId): Promise<Market[]>;
    private reduceUnderlying;
    private reducePaused;
    exactIn(tokenAmountIn: TokenAmount, tokenOut: Token, from: string, to: string, revertableAddress: string, slippage: number, deadline: number, use1Inch?: boolean): SwapExactIn;
    protected finalReceiveSide(): string;
    protected finalCalldata(): string | [];
    protected finalOffset(): number;
    protected swapTokens(): string[];
    private buildMulticall;
}
export {};
